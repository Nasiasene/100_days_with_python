+ CSS : Styling your site.
Cascading Style Sheets.


-------------------------------------------------- -------------------------------------------------- ---------------------------
-How to add CSS?

or Inline:
Little used, but you declare the property and give it the value of what you want to be changed in the same line that your element is added (it can be in a paragraph, line, or in the global html itself)

ex: <html style="background: blue"></html>
// "background: blue" is the CSS code.

the Internal:
A special tag is used, like <body> and <head> called "<style>" and between its opening and closing is where the css is inside it, I choose the element of the html file that I want to change, being able to be anyone.

eg: <html>
        <head>
            <body>
                <style>
                    html{
                        background: red;
                    }
                </style>
            </body>
        </head>
    </html>
// html{background: red;} = CSS
// html{} = SELECTOR
// background = PROPETY
// red = VALUE
// **element: {propety1: value; ...}**

o External:
The CSS is in a different file and inside that css file is where your "rules" are and inside the head of our html file we will have a tag called <link /> and we have two attributes: rel(relationship) href(where the css file Its located)
and inside the css file will have their rules organized just like in internal mode.


-------------------------------------------------- -------------------------------------------------- ---------------------------


-CSS Selectors: Choosing where to apply the CSS.

this topic refers to SELECTORS.


o TAG:
h1{
    color: blue;
}
//h1 = Selector.

when the selector is just the tag, it will change all those tags in the html code.




o CLASS:
 .red-heading{
    color: red;
}
in this case we select a specific class and that way we will change it.

classes can be created from the declaration of a tag.

<h2 class="red-heading">Text</h2>

different tags can belong to the same class.

<h2 class="red-heading">Text</h2>
<p class="red-heading">Paragraph</p>




o ID:
#main{
    color: green;
}

selects all elements with a specified id.

works similarly to classes.

<h2 id="main">Text</h2>


the difference between id and class is that there can only be one specific id for a single element.



o ATTRIBUTE:
p[draggable]{
    color: purple;
}
//p = tag
// draggable = attribute

selects all specified elements that have a common attribute.

<p draggable="true">paragraph1</p>
<p draggable="false">paragraph</p>

p[draggable="false"]{
    color: red;
}

only attributes selected as false will be modified.



o UNIVERSAL:
*{
    color: blue;
}

this way, regardless of the tag, class, id or attribute, the element will be changed.